events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
    
    # DDoS Protection - Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=3r/s;     # Общие запросы: 3/сек
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;         # API: 10/сек  
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;        # Авторизация: 1/сек
    limit_req_zone $binary_remote_addr zone=heavy:10m rate=30r/m;      # Тяжелые операции: 30/мин
    limit_req_zone $binary_remote_addr zone=static:10m rate=20r/s;     # Статика: 20/сек
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Request size limits
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;
    
    # Upstream backend
    upstream backend {
        server backend:8000;
    }
    
    # Upstream frontend
    upstream frontend {
        server frontend:80;
    }
    
    # Main server
    server {
        listen 80;
        server_name ${SERVER_NAME};
        
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        
        client_max_body_size 100M;
        
        # Проксируем фронтенд (React) – всё, что не API, идёт сюда
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API маршруты
        location /auth/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /sites/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /user/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health-check
        location /health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 