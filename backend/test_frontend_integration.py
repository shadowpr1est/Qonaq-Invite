#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –±—ç–∫–µ–Ω–¥–æ–º
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: Google OAuth –∏ Email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
"""

import requests
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "http://localhost:8000"
FRONTEND_URL = "http://localhost:5173"

def test_backend_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å endpoints –±—ç–∫–µ–Ω–¥–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ç–∫–µ–Ω–¥ endpoints...")
    
    endpoints = [
        "/auth/register",
        "/auth/login", 
        "/auth/google-oauth",
        "/auth/verify-email",
        "/auth/resend-verification",
        "/auth/refresh",
        "/auth/profile",
    ]
    
    for endpoint in endpoints:
        try:
            url = f"{BACKEND_URL}{endpoint}"
            # –î–µ–ª–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS
            response = requests.options(url, timeout=5)
            print(f"  ‚úÖ {endpoint} - –¥–æ—Å—Ç—É–ø–µ–Ω (CORS: {response.status_code})")
        except requests.RequestException as e:
            print(f"  ‚ùå {endpoint} - –æ—à–∏–±–∫–∞: {e}")

def test_frontend_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...")
    
    try:
        response = requests.get(FRONTEND_URL, timeout=5)
        if response.status_code == 200:
            print(f"  ‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω: {FRONTEND_URL}")
            return True
        else:
            print(f"  ‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except requests.RequestException as e:
        print(f"  ‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def test_registration_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π flow —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("\nüë§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ flow —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π email –¥–ª—è —Ç–µ—Å—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    test_email = f"test_user_{timestamp}@example.com"
    
    registration_data = {
        "name": "Test User",
        "email": test_email,
        "password": "SecurePass123"
    }
    
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        url = f"{BACKEND_URL}/auth/register"
        response = requests.post(url, json=registration_data, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            print(f"  ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            print(f"  üìß Email –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: {test_email}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
            if not data.get("user", {}).get("is_email_verified", True):
                print(f"  ‚úÖ Email —Å—Ç–∞—Ç—É—Å: –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω (–æ–∂–∏–¥–∞–µ–º–æ)")
            else:
                print(f"  ‚ö†Ô∏è Email —Å—Ç–∞—Ç—É—Å: –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)")
            
            return data.get("access_token"), test_email
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code} - {response.text}")
            return None, None
            
    except requests.RequestException as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        return None, None

def test_email_verification_flow(email):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç flow –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email"""
    print(f"\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è {email}...")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–∏—Å—å–º–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        url = f"{BACKEND_URL}/auth/resend-verification"
        response = requests.post(url, json={"email": email}, timeout=10)
        
        if response.status_code == 200:
            print(f"  ‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —É—Å–ø–µ—à–Ω–∞")
            data = response.json()
            print(f"  üì© –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code} - {response.text}")
            
    except requests.RequestException as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")

def test_oauth_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Google OAuth endpoint"""
    print(f"\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google OAuth endpoint...")
    
    # –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è OAuth (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞)
    oauth_data = {
        "email": "oauth_test@gmail.com",
        "name": "OAuth Test User", 
        "google_id": "123456789",
        "avatar": "https://example.com/avatar.jpg"
    }
    
    try:
        url = f"{BACKEND_URL}/auth/google-oauth"
        response = requests.post(url, json=oauth_data, timeout=10)
        
        if response.status_code == 200:
            print(f"  ‚úÖ Google OAuth endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
            data = response.json()
            user = data.get("user", {})
            print(f"  üë§ –°–æ–∑–¥–∞–Ω/–Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get('email')}")
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ OAuth: {response.status_code} - {response.text}")
            
    except requests.RequestException as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ OAuth: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –§–†–û–ù–¢–ï–ù–î–ê –ò –ë–≠–ö–ï–ù–î–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    test_backend_endpoints()
    frontend_ok = test_frontend_availability()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    access_token, test_email = test_registration_flow()
    
    if test_email:
        test_email_verification_flow(test_email)
    
    test_oauth_endpoint()
    
    print("\n" + "=" * 50)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"  üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if frontend_ok else '‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}")
    print(f"  üîß –ë—ç–∫–µ–Ω–¥: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç")
    print(f"  üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if access_token else '‚ùå –û—à–∏–±–∫–∞'}")
    print(f"  üìß Email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    print(f"  üîê Google OAuth: ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if frontend_ok and access_token:
        print("\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        print(f"üì± –§—Ä–æ–Ω—Ç–µ–Ω–¥: {FRONTEND_URL}")
        print(f"üîß –ë—ç–∫–µ–Ω–¥: {BACKEND_URL}")
        print("\nüìù –ß—Ç–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
        print("  1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É")
        print("  2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google OAuth")
        print("  3. –ë–∞–Ω–Ω–µ—Ä email –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        print("  4. –°—Ç—Ä–∞–Ω–∏—Ü–∞ /verify-email?token=test")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π!")

if __name__ == "__main__":
    main() 