"""initial_migration

Revision ID: b9a2bfbc6706
Revises: 
Create Date: 2025-07-03 10:16:58.396305

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b9a2bfbc6706'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add is_email_verified as nullable first
    op.add_column('users', sa.Column('is_email_verified', sa.Boolean(), nullable=True))
    
    # Update existing records to have default value
    op.execute("UPDATE users SET is_email_verified = FALSE WHERE is_email_verified IS NULL")
    
    # Now make it not nullable
    op.alter_column('users', 'is_email_verified', nullable=False)
    
    op.add_column('users', sa.Column('email_verification_token', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('google_id', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('oauth_provider', sa.String(length=50), nullable=True))
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_unique_constraint(None, 'users', ['google_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('users', 'oauth_provider')
    op.drop_column('users', 'google_id')
    op.drop_column('users', 'email_verification_token')
    op.drop_column('users', 'is_email_verified')
    # ### end Alembic commands ###
