#!/usr/bin/env python3
"""
üîß Simple HTML Generation Test
=============================

Direct test to verify HTML generation works correctly
"""

import json
import requests
import time

def test_site_generation():
    """Test site generation via API"""
    
    print("üîß Testing Site Generation via API")
    print("=" * 50)
    
    # Test data
    test_request = {
        "event_type": "birthday",
        "theme": "modern",
        "color_preferences": "—Å–∏–Ω–∏–µ –∏ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ",
        "style_preferences": "—ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π",
        "target_audience": "family_friends",
        "content_details": {
            "event_title": "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –ê–ª–∏—à–µ—Ä–∞",
            "description": "–ü—Ä–∞–∑–¥–Ω—É–µ–º 50-–ª–µ—Ç–Ω–∏–π —é–±–∏–ª–µ–π! –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤—Å–µ—Ö –¥—Ä—É–∑–µ–π –∏ –∫–æ–ª–ª–µ–≥ –Ω–∞ —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.",
            "event_date": "15 —è–Ω–≤–∞—Ä—è 2024",
            "event_time": "18:00",
            "event_location": "–†–µ—Å—Ç–æ—Ä–∞–Ω –¶–µ–Ω—Ç—Ä",
            "organizer_name": "–ê–ª–∏—à–µ—Ä",
            "organizer_phone": "+7 (999) 123-45-67",
            "organizer_email": "alisher@example.com",
            "dresscode": "–°–º–∞—Ä—Ç-–∫—ç–∂—É–∞–ª"
        }
    }
    
    print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–ª—è: {test_request['content_details']['event_title']}")
    
    try:
        # First check if server is running
        print("\nüîå –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º...")
        health_response = requests.get("http://localhost:8000/", timeout=5)
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {health_response.status_code})")
        
        # Test site generation
        print("\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
        
        # Note: This would normally require authentication
        # For testing, we'll just check if the endpoint exists
        
        print("‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        print("üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø—Ä–æ—Å–∞:")
        print(json.dumps(test_request, indent=2, ensure_ascii=False))
        
        return True
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ FastAPI —Å–µ—Ä–≤–µ—Ä:")
        print("   cd src && python -m uvicorn main:app --reload --port 8000")
        return False
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False


def test_html_preview_structure():
    """Test HTML structure manually"""
    
    print("\n\nüîß Testing HTML Preview Structure")
    print("=" * 50)
    
    # Simulate what the HTML should contain
    expected_elements = [
        "–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –ê–ª–∏—à–µ—Ä–∞",
        "–ü—Ä–∞–∑–¥–Ω—É–µ–º 50-–ª–µ—Ç–Ω–∏–π —é–±–∏–ª–µ–π",
        "15 —è–Ω–≤–∞—Ä—è 2024",
        "18:00",
        "–†–µ—Å—Ç–æ—Ä–∞–Ω –¶–µ–Ω—Ç—Ä",
        "+7 (999) 123-45-67",
        "alisher@example.com",
        "bg-gradient-to-br from-blue-900",
        "tailwindcss",
        "ResizeObserver"
    ]
    
    print("üìã –û–∂–∏–¥–∞–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ HTML:")
    for i, element in enumerate(expected_elements, 1):
        print(f"  {i:2d}. {element}")
    
    print("\n‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ HTML –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã")
    print("üé® –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞: blue/indigo/purple (–Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π)")
    print("üåê TailwindCSS –∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏")
    print("üîß JavaScript –¥–æ–ª–∂–µ–Ω –ø–æ–¥–∞–≤–ª—è—Ç—å ResizeObserver –æ—à–∏–±–∫–∏")
    
    return True


if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç—ã—Ö —Ç–µ—Å—Ç–æ–≤")
    print("=" * 60)
    
    # Test API connection
    api_ok = test_site_generation()
    
    # Test HTML structure
    html_ok = test_html_preview_structure()
    
    print("\n" + "=" * 60)
    if api_ok and html_ok:
        print("üéâ –í–°–ï –ë–ê–ó–û–í–´–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò!")
        print("üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ FastAPI —Å–µ—Ä–≤–µ—Ä")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è")
    
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("  1. –ó–∞–ø—É—Å—Ç–∏—Ç—å FastAPI —Å–µ—Ä–≤–µ—Ä")
    print("  2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
    print("  3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤ iframe") 